{"version":3,"sources":["components/TailwindComponents/TWDivider.jsx","components/TailwindComponents/TWDeleteButton.jsx","components/TailwindComponents/TWCheckbox.jsx","components/TailwindComponents/TWButton.jsx","components/TailwindComponents/TWAmendPopup.jsx","components/ToDoItem.jsx","components/ToDoForm.jsx","components/TailwindComponents/TWCard.jsx","components/ToDo.jsx","index.jsx"],"names":["TWDivider","class","TWDeleteButton","props","type","onClick","icon","faTrash","TWCheckbox","onChange","checked","useState","setChecked","id","htmlFor","className","children","TWButton","TWAmendPopup","item","onAmendItem","trigger","position","onSubmit","e","preventDefault","titleInput","target","title","descriptionInput","description","newItem","content","value","moment","Date","now","format","name","placeholder","defaultValue","required","htmlType","ToDoItem","onCheck","onRemove","onAmend","detatchTitleAndTime","time","raw","match","length","matchedTimePart","substr","replace","completed","ToDoForm","onRemoveCompleted","layout","TWCard","extra","config","headers","Authorization","ToDo","todos","setTodos","idCount","setIdCount","useEffect","a","axios","get","result","data","index","findIndex","todo","delete","splice","filter","post","indexOf","titleWithCreationDate","map","renderTodoItems","App","Layout","Header","Footer","Content","ReactDOM","render","document","getElementById","root","classList","add"],"mappings":"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","file":"static/js/main.d818911a.chunk.js","sourcesContent":["export const TWDivider = () => {\r\n  return (\r\n    <hr class=\"border-0 bg-gray-300 text-gray-500 h-px m-3 my-3\"></hr>\r\n  );\r\n};\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const TWDeleteButton = (props) => {\r\n    return (\r\n        <button class=\" h-14 w-14 px-5 m-2 text-red-100 transition-colors duration-150 bg-red-400 rounded-lg focus:shadow-outline hover:bg-red-500\" type=\"danger\" onClick={props.onClick}><FontAwesomeIcon icon={faTrash}></FontAwesomeIcon></button>\r\n    );\r\n}","import { useState } from \"react\";\r\n\r\nexport const TWCheckbox = (props) => {\r\n  const { onChange, checked } = props;\r\n\r\n  const [isChecked, setChecked] = useState(checked);\r\n\r\n  const onCheck = () => {\r\n      setChecked(!checked);\r\n      if (onChange) {\r\n        onChange(checked);\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div class=\"form-check\">\r\n      <input\r\n        class=\"form-check-input appearance-none h-4 w-4 border border-gray-300 rounded-sm bg-white checked:bg-blue-600 checked:border-blue-600 focus:outline-none transition duration-200 mt-1 align-top bg-no-repeat bg-center bg-contain float-left mr-2 cursor-pointer\"\r\n        type=\"checkbox\"\r\n        onChange={onCheck}\r\n        id=\"flexCheckDefault\"\r\n      ></input>\r\n      <label\r\n        class=\"form-check-label inline-block text-gray-800 mx-2\"\r\n        htmlFor=\"flexCheckDefault\"\r\n      >\r\n          <p className={checked ? \"completed\" : \"\"}>\r\n            {props.children}\r\n          </p>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","\r\n\r\nexport const TWButton = (props) => {\r\n  return (\r\n    <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\" onClick={props.onClick}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n","import Popup from \"reactjs-popup\";\r\nimport moment from \"moment\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport { TWButton } from \"./TWButton\";\r\n\r\nexport const TWAmendPopup = (props) => {\r\n  const { item, onAmendItem } = props;\r\n\r\n  const onFinish = (e) => {\r\n    e.preventDefault();\r\n    const titleInput = e.target.title;\r\n    const descriptionInput = e.target.description;\r\n\r\n    if (onAmendItem) {\r\n      const newItem = {\r\n        content:\r\n          titleInput.value +\r\n          \" | \" +\r\n          moment(Date.now()).format(\"DD.MM.yyyy - HH:mm\"),\r\n        description: descriptionInput.value,\r\n      };\r\n      onAmendItem(item.id, newItem);\r\n    }\r\n\r\n    titleInput.value = null;\r\n    descriptionInput.value = null;\r\n  };\r\n\r\n  return (\r\n    <Popup\r\n      trigger={\r\n        <button class=\"bg-white hover:bg-gray-100 text-gray-400 hover:text-gray-500 font-semibold py-2 px-4 rounded shadow\">\r\n          Amend\r\n        </button>\r\n      }\r\n      position=\"right center\"\r\n    >\r\n      <form className=\"todo-form\" onSubmit={onFinish}>\r\n        <div className=\"mb-6 flex justify-center text-gray-400\">\r\n          <p>Amend your Todo item</p>\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n            placeholder=\"New Todo title\"\r\n            defaultValue={item.title}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n            class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n            placeholder=\"New Todo description\"\r\n            defaultValue={item.description}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <div className=\"mb-6 flex justify-center\">\r\n          <TWButton htmlType=\"submit\" type=\"primary\">\r\n            Amend\r\n          </TWButton>\r\n        </div>\r\n      </form>\r\n    </Popup>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { TWDivider } from \"./TailwindComponents/TWDivider\";\r\nimport { TWDeleteButton } from \"./TailwindComponents/TWDeleteButton\";\r\nimport { TWCheckbox } from \"./TailwindComponents/TWCheckbox\";\r\nimport { TWAmendPopup } from \"./TailwindComponents/TWAmendPopup\";\r\n\r\nexport const ToDoItem = (props) => {\r\n  const { item, onCheck, onRemove, onAmend } = props;\r\n\r\n  const onRemoveItem = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (onRemove) {\r\n      onRemove(item.id);\r\n    }\r\n  };\r\n\r\n  /* Since there is no data element corresponding the date and time of creation\r\n  in the API's model, the solution is to store it inside the content along with the title and \r\n  then parse appropriately while rendering */\r\n  const detatchTitleAndTime = () => {\r\n    const timeRegex = /\\s\\|\\s\\d{2}\\.\\d{2}\\.\\d{4}\\s-\\s\\d{2}:\\d{2}/;\r\n    const raw = item.content;\r\n    const match = raw.match(timeRegex);\r\n\r\n    let title, time;\r\n\r\n    if (match && match.length > 0) {\r\n      const matchedTimePart = match[match.length - 1];\r\n      time = matchedTimePart.substr(3);\r\n      title = raw.replace(matchedTimePart, \"\");\r\n    } else {\r\n      time = \"N/A\";\r\n      title = raw;\r\n    }\r\n\r\n    return { title, time };\r\n  };\r\n\r\n  return (\r\n    <li\r\n      className={\r\n        \"block justify-between items-center\" + item.completed === true\r\n          ? \" completed\"\r\n          : \"\"\r\n      }\r\n      key={item.id}\r\n    >\r\n      <div className={item.completed === true ? \"container-completed\" : \"\"}>\r\n        <h3\r\n          className={\r\n            (item.completed === true ? \"completed\" : \"\") +\r\n            \" m-4 text-gray-800 text-lg\"\r\n          }\r\n        >\r\n          {detatchTitleAndTime().title}\r\n        </h3>\r\n        <div className=\"flex justify-between m-4\">\r\n          <TWCheckbox\r\n            className={item.completed ? \"completed\" : \"\"}\r\n            checked={item.completed}\r\n            onChange={onCheck}\r\n          >\r\n            {item.description}\r\n          </TWCheckbox>\r\n          <TWDeleteButton onClick={onRemoveItem}></TWDeleteButton>\r\n        </div>\r\n        <div className=\"flex justify-between m-4\">\r\n          <TWAmendPopup item={{id: item.id, title: detatchTitleAndTime().title, description: item.description}} onAmendItem={onAmend}></TWAmendPopup>\r\n          <time className=\"font-mono font-light text-gray-300 mt-auto\">\r\n            {detatchTitleAndTime().time}\r\n          </time>\r\n        </div>\r\n        <TWDivider />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { TWButton } from './TailwindComponents/TWButton';\r\n\r\nexport const ToDoForm = (props) => {\r\n  const { onSubmit, onRemoveCompleted } = props;\r\n\r\n  const titleRules = [\r\n    {\r\n      required: true,\r\n      message: 'Todo title cannot be empty!',\r\n    },\r\n    {\r\n      pattern: /([A-Z]|[А-Я]).*/,\r\n      message: 'Todo title should start with a capital letter!',\r\n    },\r\n    {\r\n      min: 3,\r\n      message: 'Todo title should be longer than 3 characters!',\r\n    },\r\n  ];\r\n\r\n  const descriptionRules = [\r\n    {\r\n      required: true,\r\n      message: 'Todo description cannot be empty!',\r\n    },\r\n    {\r\n      min: 3,\r\n      message: 'Todo description should be longer than 3 characters!',\r\n    },\r\n  ];\r\n\r\n  const onFinish = (e) => {\r\n    const titleInput = e.target.title;\r\n    const descriptionInput = e.target.description;\r\n\r\n    if (onSubmit) {\r\n      onSubmit({title: titleInput.value, description: descriptionInput.value});\r\n    }\r\n\r\n    titleInput.value = null;\r\n    descriptionInput.value = null;\r\n  }\r\n\r\n  return (\r\n    <form className=\"todo-form\" layout={'column'} onSubmit={onFinish}>\r\n      <div className=\"mb-6\">\r\n        <input type=\"text\" id=\"title\" name=\"title\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"Todo title\" required></input>\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <input type=\"text\" id=\"description\" name=\"description\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"Todo description\" required></input>\r\n      </div>\r\n      <div className=\"mb-6 flex justify-between\">\r\n        <TWButton htmlType=\"submit\" type=\"primary\">Add</TWButton>\r\n        <TWButton htmlType=\"submit\" type=\"primary\" onClick={onRemoveCompleted}>Remove completed</TWButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","export const TWCard = (props) => {\r\n  const { title, extra } = props;\r\n\r\n  return (\r\n    <div class=\" p-2\">\r\n      <div class=\"rounded shadow-lg w-full\">\r\n        <div class=\"px-6 py-4\">\r\n          <div className=\"flex justify-between\">\r\n            <div class=\"font-bold text-xl mb-2\">{title}</div>\r\n            <div class=\"font-light text-sm \">{extra}</div>\r\n          </div>\r\n          <div class=\"text-gray-700 text-base\">{props.children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { ToDoItem } from \"./ToDoItem\";\r\nimport { ToDoForm } from \"./ToDoForm\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nimport { TWDivider } from \"./TailwindComponents/TWDivider\";\r\nimport { TWCard } from \"./TailwindComponents/TWCard\";\r\n\r\nconst token = \"3f1b2e94bd0c9e8b754aeefd1200d09583d51951\";\r\nconst config = {\r\n  headers: {\r\n    Authorization: `Bearer ${token}`,\r\n  },\r\n};\r\n\r\nexport const ToDo = () => {\r\n  const [todos, setTodos] = useState([\r\n    { id: 1, content: \"some\", completed: false },\r\n    { id: 2, content: \"another one\", completed: false },\r\n  ]);\r\n  const [idCount, setIdCount] = useState(10);\r\n\r\n  useEffect(async () => {\r\n    const result = await axios.get(\r\n      \"https://api.todoist.com/rest/v1/tasks\",\r\n      config\r\n    );\r\n    setTodos(result.data);\r\n  }, []);\r\n\r\n  const onRemove = async (id) => {\r\n    const index = todos.findIndex((todo) => id === todo.id);\r\n\r\n    if (index !== -1) {\r\n      await axios.delete(`https://api.todoist.com/rest/v1/tasks/${id}`, config);\r\n      todos.splice(index, 1);\r\n      setTodos([...todos]);\r\n    }\r\n  };\r\n\r\n  const onCheck = async (id) => {\r\n    const index = todos.findIndex((todo) => todo.id === id);\r\n\r\n    if (index !== -1) {\r\n      const todo = todos[index];\r\n\r\n      todo.completed = !todo.completed;\r\n      todos.splice(index, 1, todo);\r\n      setTodos([...todos]);\r\n    }\r\n  };\r\n\r\n  const onRemoveCompleted = async () => {\r\n    let completed = todos.filter((todo) => todo.completed === true);\r\n\r\n    for (let todo of completed) {\r\n      await axios.post(\r\n        `https://api.todoist.com/rest/v1/tasks/${todo.id}/close`,\r\n        \"\",\r\n        config\r\n      );\r\n      todos.splice(todos.indexOf(todo), 1);\r\n      setTodos([...todos]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (item) => {\r\n    let titleWithCreationDate =\r\n      item.title + \" | \" + moment(Date.now()).format(\"DD.MM.yyyy - HH:mm\");\r\n    const todo = {\r\n      content: titleWithCreationDate,\r\n      description: item.description,\r\n    };\r\n    const { data } = await axios.post(\r\n      \"https://api.todoist.com/rest/v1/tasks\",\r\n      todo,\r\n      config\r\n    );\r\n\r\n    setTodos([...todos, { ...todo, id: data.id }]);\r\n    setIdCount(idCount + 1);\r\n  };\r\n\r\n  const onAmend = async (id, newItem) => {\r\n    const index = todos.findIndex((todo) => todo.id === id);\r\n\r\n    if (index !== -1) {\r\n      await axios.post(`https://api.todoist.com/rest/v1/tasks/${id}`, newItem, config);\r\n      todos.splice(index, 1, newItem);\r\n      setTodos([...todos]);\r\n    }\r\n  };\r\n\r\n  const renderTodoItems = (todos) => {\r\n    return (\r\n      <ul className=\"todo-list\">\r\n        {todos.map((todo) => (\r\n          <ToDoItem\r\n            key={todo.id}\r\n            item={todo}\r\n            onRemove={onRemove}\r\n            onCheck={onCheck}\r\n            onAmend={onAmend}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center\">\r\n      <TWCard id=\"todoCard\" title={\"My todos\"} extra={\"Count: \" + todos.length}>\r\n        <ToDoForm onSubmit={onSubmit} onRemoveCompleted={onRemoveCompleted} />\r\n        <TWDivider />\r\n        {renderTodoItems(todos)}\r\n      </TWCard>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Layout, Row, Col } from 'antd';\r\n\r\nimport { ToDo } from './components/ToDo';\r\nimport './index.css';\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <ToDo/>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'), () => {\r\n  const root = document.getElementById('root');\r\n  root.classList.add('flex');\r\n  root.classList.add('items-center');\r\n  root.classList.add('justify-center');\r\n});"],"sourceRoot":""}